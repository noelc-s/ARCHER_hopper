# Gains associated with the low-level controller
# For the reaction wheeels multiplying orientation error and angular rate
Orientation:
  Kp: [ -90.,-90.,-90. ]
  Kd: [ -6.,-6.,-6.]
# For the leg multiplying deflection error and velocity
Leg:
  Kp: .4
  Kd: 0.02
LowLevel:
  dt: 0.001

Simulator:
  p0: [0,0,0.5]         # initial position [x,y,z]
  v0: [0,0,0]           # initial velocity [x_dot, y_dot, z_dot]
  rpy0: [0,0,0]         # initial orientation [roll, pitch, yaw]
  w0: [0,0,0]           # initial angular rate [roll_dot, pitch_dot, yaw_dot]
  pauseBeforeStart: 0   # how long to wait [in seconds] before simulation begins
  speed: 1              # speed of simulation [multiplier]
  # obsx: [0.5, 1.05, 1.65]
  # obsy: [-0.1, 0.2, -0.08]
  # obsr: [0.375, 0.375, 0.375]
  # obsx: [0.4706, 1.096, 1.725]
  # obsy: [-0.391, 0.1917, -0.330]
  obsx: [1.438, 0.863, 0.577]
  obsy: [-0.24, 0.383, -0.4]
  obsr: [0.355, 0.355, 0.355]

  # Perturbation Forces
  pert_force_x: [0, 0, 0, 0]    # perturbation force in X direction at below times
  pert_force_y: [0, 0, 0, 0]    # perturbation force in Y direction at below times
  pert_start: [2000, 5000, 11000,14000] # start time for force [milliseconds]
  pert_end: [2700, 5700, 11150, 14150]  # end time for force [milliseconds
  simEnd: 10000.0               # time to end the simulation [s]
  yaw_drift: 1     # drift in rad / s

MPC:
  prob_str: complex
  N: 25         # nodes of MPC horizons
  Q: 10         # state cost
  Qf: 10
  Qw: 0
  R: 1          # input cost
  Rnom: 0.1     # input cost for nominal problem 
  Rv_first: 10    # cost on rate of change of input
  Rv_second: 10   # cost on second order rate of change of input
  t_wall: 0.1   # time limit for nlp solve
  dk: 1         # number of rom steps to take between mpc solves
  w_max: 1
  max_iter: 200
  # nn_path: coleonguard-Georgia Institute of Technology/Deep_Tube_Training/2tzuqtqc
  nn_path: coleonguard-Georgia Institute of Technology/Deep_Tube_Training/yhwtziw1

  rom:
    cls: single_int_planner
    dt: 0.1
    v_max: 0.2
    a_max: 0.2

RaibertHeuristic:
  kx_p: -0.25               # p gain for placing foot to manipulate the forward velocity (x-direction)
  ky_p: 0.25                # p gain for placing foot to manipulate the forward velocity (y-direction)
  kx_d: -0.4               # d gain for placing foot to manipulate the forward velocity (x-direction)
  ky_d: 0.4                # d gain for placing foot to manipulate the forward velocity (y-direction)
  kx_f: 0.25                # feed forward gain for velocity tracking (x-direction)
  ky_f: -0.25               # feed forward gain for velocity tracking (y-direction)
  pos_clip: 0.5
  vel_clip: 1.
  v_des_clip: 0.2
  angle_max: 0.4
  yaw_damping: 0.0035 

SpringStiffness: 1000 # Not so unreasonable that this is a parameter, as it is a soft contact simulator

roll_offset: 0.00
pitch_offset: -0.00

Policy:
  dt_policy: 0.02


